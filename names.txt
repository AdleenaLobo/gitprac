git init --> initializes the git repo
git status --> shows history
untracked file [changes made but not tracked by git]
git add . --> adds all the files in the current folder to the staging area
staging area --> git has a track of it in you rlocal system but it is not yet osted on the cloud
or 
git add [filename]
git commit -m "your message" --> goes into the commited stage with a message attached to it
git log --> used to view the git history of all the commits
git reset [the commit id] --> this changes the head pointer to the commit id that you have put there. so the previous all the commits and changes go back in th local repo it aint in your staging area . basically its nomore tracked
git stash --> everything in the staging area goes to the backstage and no more in the staging area.
git stash pop --> you get the background elements back in the staging area
git stash clear --> all the background info is cleared
git branch [name of the branch] --> you can create a different branch other than main and then merge it with the main later on
git checkout [branch name] --> send you to the branch.
git merge [branch name] --> this merges the current branch u are in to the branch name
fork the repo
press on the fork button of the project of the other account you want to fork to 
and then clone it into your repo
from where you fork the project is called as the upstream url
